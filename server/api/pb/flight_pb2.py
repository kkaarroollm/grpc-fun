# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flight.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x66light.proto\x12\x06\x66light\"\x1c\n\x0b\x46lightClass\x12\r\n\x05value\x18\x01 \x01(\t\"\x1b\n\nFlightFood\x12\r\n\x05value\x18\x01 \x01(\t\"2\n\rFlightLuggage\x12\x0f\n\x07\x63hecked\x18\x01 \x01(\x08\x12\x10\n\x08quantity\x18\x02 \x01(\x05\"~\n\rFlightRequest\x12#\n\x06\x63lass_\x18\x01 \x01(\x0b\x32\x13.flight.FlightClass\x12 \n\x04\x66ood\x18\x02 \x01(\x0b\x32\x12.flight.FlightFood\x12&\n\x07luggage\x18\x03 \x01(\x0b\x32\x15.flight.FlightLuggage\"%\n\x0e\x46lightResponse\x12\x13\n\x0b\x66light_data\x18\x01 \x01(\t2F\n\x06\x46light\x12<\n\tGetFlight\x12\x15.flight.FlightRequest\x1a\x16.flight.FlightResponse\"\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'flight_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_FLIGHTCLASS']._serialized_start=24
  _globals['_FLIGHTCLASS']._serialized_end=52
  _globals['_FLIGHTFOOD']._serialized_start=54
  _globals['_FLIGHTFOOD']._serialized_end=81
  _globals['_FLIGHTLUGGAGE']._serialized_start=83
  _globals['_FLIGHTLUGGAGE']._serialized_end=133
  _globals['_FLIGHTREQUEST']._serialized_start=135
  _globals['_FLIGHTREQUEST']._serialized_end=261
  _globals['_FLIGHTRESPONSE']._serialized_start=263
  _globals['_FLIGHTRESPONSE']._serialized_end=300
  _globals['_FLIGHT']._serialized_start=302
  _globals['_FLIGHT']._serialized_end=372
# @@protoc_insertion_point(module_scope)
